// Script de test automatis√© pour la page d'√©valuation
// √Ä ex√©cuter dans la console du navigateur apr√®s avoir ouvert http://localhost:3000

async function testEvaluationPage() {
  console.log('üß™ Test automatis√© de la page d\'√©valuation\n');
  
  // 1. Simuler la connexion enseignant
  console.log('1Ô∏è‚É£ Simulation connexion enseignant...');
  
  const userInfo = {
    _id: '6888c9e829249151f341e769',
    name: 'Prof. Martin Dupont',
    email: 'prof.martin@example.com',
    role: 'teacher',
    token: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')).token : null
  };
  
  if (!userInfo.token) {
    console.log('‚ùå Pas de token trouv√©. Veuillez vous connecter manuellement d\'abord.');
    console.log('   Email: prof.martin@example.com');
    console.log('   Mot de passe: password123');
    return;
  }
  
  console.log('‚úÖ Token trouv√©:', userInfo.token.substring(0, 20) + '...');
  
  // 2. V√©rifier l'acc√®s √† la page d'√©valuation
  console.log('\n2Ô∏è‚É£ Navigation vers /evaluation...');
  
  if (window.location.pathname !== '/evaluation') {
    window.location.href = '/evaluation';
    console.log('‚è≥ Redirection en cours... Relancez ce script apr√®s le chargement.');
    return;
  }
  
  console.log('‚úÖ Sur la page d\'√©valuation');
  
  // 3. Attendre le chargement des donn√©es
  console.log('\n3Ô∏è‚É£ V√©rification des donn√©es affich√©es...');
  
  setTimeout(() => {
    // V√©rifier la pr√©sence du titre
    const title = document.querySelector('h2');
    if (title && title.textContent.includes('√âvaluation')) {
      console.log('‚úÖ Titre trouv√©:', title.textContent);
    } else {
      console.log('‚ùå Titre non trouv√©');
    }
    
    // V√©rifier les statistiques globales
    const statsCards = document.querySelectorAll('.stats-card');
    if (statsCards.length > 0) {
      console.log('‚úÖ Statistiques globales trouv√©es:', statsCards.length, 'cartes');
      statsCards.forEach((card, index) => {
        const title = card.querySelector('.text-muted');
        const value = card.querySelector('h3, h4');
        if (title && value) {
          console.log(`   ${index + 1}. ${title.textContent}: ${value.textContent}`);
        }
      });
    } else {
      console.log('‚ùå Statistiques globales non trouv√©es');
    }
    
    // V√©rifier la liste des apprenants
    const studentRows = document.querySelectorAll('tbody tr');
    const studentCards = document.querySelectorAll('.student-card');
    
    if (studentRows.length > 0) {
      console.log('\n‚úÖ Apprenants trouv√©s (tableau):', studentRows.length);
      studentRows.forEach((row, index) => {
        const cells = row.querySelectorAll('td');
        if (cells.length >= 3) {
          console.log(`   ${index + 1}. ${cells[0].textContent} - ${cells[1].textContent}`);
        }
      });
    } else if (studentCards.length > 0) {
      console.log('\n‚úÖ Apprenants trouv√©s (cartes):', studentCards.length);
      studentCards.forEach((card, index) => {
        const name = card.querySelector('.card-title');
        if (name) {
          console.log(`   ${index + 1}. ${name.textContent}`);
        }
      });
    } else {
      console.log('‚ùå Aucun apprenant affich√©');
      
      // V√©rifier s'il y a un message d'√©tat vide
      const emptyState = document.querySelector('.text-center');
      if (emptyState && emptyState.textContent.includes('Aucun')) {
        console.log('‚ÑπÔ∏è  Message d\'√©tat vide:', emptyState.textContent);
      }
    }
    
    // V√©rifier les erreurs dans la console
    console.log('\n4Ô∏è‚É£ V√©rification des erreurs...');
    const errors = document.querySelectorAll('.alert-danger');
    if (errors.length > 0) {
      console.log('‚ùå Erreurs trouv√©es:');
      errors.forEach(error => {
        console.log('   -', error.textContent);
      });
    } else {
      console.log('‚úÖ Aucune erreur affich√©e');
    }
    
    // R√©sum√© final
    console.log('\nüìä R√âSUM√â DU TEST');
    console.log('================');
    
    if (studentRows.length > 0 || studentCards.length > 0) {
      console.log('‚úÖ La page d\'√©valuation fonctionne correctement');
      console.log('‚úÖ Les donn√©es des apprenants sont affich√©es');
      console.log('‚ÑπÔ∏è  Vous pouvez cliquer sur "Voir d√©tails" pour tester les modals');
    } else {
      console.log('‚ö†Ô∏è  La page s\'affiche mais aucune donn√©e n\'est visible');
      console.log('‚ÑπÔ∏è  V√©rifiez que :');
      console.log('   1. Des sessions ont √©t√© cr√©√©es par des apprenants');
      console.log('   2. L\'API backend fonctionne (testez avec testEvaluationFinal.js)');
      console.log('   3. Le token JWT est valide');
    }
    
    // Test de l'API directement depuis le frontend
    console.log('\n5Ô∏è‚É£ Test direct de l\'API...');
    fetch('http://localhost:5000/api/evaluation/students', {
      headers: {
        'Authorization': `Bearer ${userInfo.token}`
      }
    })
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        console.log('‚úÖ API r√©pond correctement');
        console.log('   Nombre d\'apprenants:', data.count);
        if (data.data && data.data.length > 0) {
          console.log('   Apprenants retourn√©s:');
          data.data.forEach(item => {
            console.log(`     - ${item.student.name} (${item.totalSessions} sessions)`);
          });
        }
      } else {
        console.log('‚ùå Erreur API:', data.message);
      }
    })
    .catch(err => {
      console.log('‚ùå Erreur de connexion √† l\'API:', err.message);
    });
    
  }, 2000); // Attendre 2 secondes pour le chargement
}

// Instructions
console.log('üìù INSTRUCTIONS D\'UTILISATION');
console.log('============================');
console.log('1. Connectez-vous d\'abord avec le compte enseignant :');
console.log('   Email: prof.martin@example.com');
console.log('   Mot de passe: password123');
console.log('');
console.log('2. Une fois connect√©, ex√©cutez : testEvaluationPage()');
console.log('');
console.log('3. Si vous √™tes d√©j√† sur /evaluation, le test s\'ex√©cutera imm√©diatement');
console.log('   Sinon, vous serez redirig√© et devrez relancer le test');

// Export pour utilisation
window.testEvaluationPage = testEvaluationPage;
