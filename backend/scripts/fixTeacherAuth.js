// Script pour corriger l'authentification de l'enseignant
const mongoose = require('mongoose');
const User = require('../models/userModel');
const bcrypt = require('bcryptjs');
require('dotenv').config({ path: '../.env' });

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/spaced-revision';

async function fixTeacherAuth() {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB\n');

    // Trouver Prof. Martin Dupont
    let teacher = await User.findOne({ 
      name: 'Prof. Martin Dupont',
      role: 'teacher'
    });

    if (!teacher) {
      console.log('‚ö†Ô∏è Prof. Martin Dupont non trouv√©, cr√©ation...');
      
      // Cr√©er l'enseignant
      const hashedPassword = await bcrypt.hash('password123', 10);
      teacher = await User.create({
        name: 'Prof. Martin Dupont',
        email: 'prof.martin@example.com',
        password: hashedPassword,
        role: 'teacher'
      });
      
      console.log('‚úÖ Enseignant cr√©√©');
    } else {
      console.log(`üë®‚Äçüè´ Enseignant trouv√©: ${teacher.name}`);
      
      // Mettre √† jour le mot de passe directement
      const hashedPassword = await bcrypt.hash('password123', 10);
      
      await User.updateOne(
        { _id: teacher._id },
        { $set: { password: hashedPassword } }
      );
      
      console.log('‚úÖ Mot de passe mis √† jour');
    }

    // R√©cup√©rer l'utilisateur mis √† jour
    teacher = await User.findById(teacher._id);
    
    console.log(`\nüìß Email: ${teacher.email}`);
    console.log(`üÜî ID: ${teacher._id}`);
    console.log(`üîë Mot de passe: password123`);
    
    // Test de v√©rification
    const testPassword = 'password123';
    const isValid = await bcrypt.compare(testPassword, teacher.password);
    console.log(`\nüîç Test de v√©rification: ${isValid ? '‚úÖ OK' : '‚ùå √âCHEC'}`);
    
    if (isValid) {
      console.log('\n‚ú® Authentification configur√©e avec succ√®s!');
      console.log('\nüìù Pour tester:');
      console.log('1. Aller sur http://localhost:3000/login');
      console.log('2. Se connecter avec:');
      console.log(`   Email: ${teacher.email}`);
      console.log(`   Mot de passe: password123`);
      console.log('3. Aller sur la page √âvaluation');
    }

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.connection.close();
    console.log('\n‚úÖ Connexion ferm√©e');
  }
}

fixTeacherAuth();
