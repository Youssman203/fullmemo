// Script de test rapide pour l'import simple CSV
// √Ä copier-coller dans la console du navigateur

console.log('üß™ TEST IMPORT SIMPLE CSV - Script de test rapide');
console.log('üìã √âtapes √† suivre dans le navigateur:\n');

console.log('1. üîê CONNEXION ENSEIGNANT');
console.log('   - Email: prof.martin@example.com');
console.log('   - Mot de passe: password123');
console.log('   - V√©rifier que le r√¥le est "teacher"\n');

console.log('2. üìö NAVIGATION COLLECTIONS');
console.log('   - Aller sur la page Collections');
console.log('   - V√©rifier la pr√©sence du bouton "Import Simple CSV" (vert)');
console.log('   - Le bouton doit √™tre visible uniquement pour les enseignants\n');

console.log('3. üì§ TEST MODAL IMPORT');
console.log('   - Cliquer sur "Import Simple CSV"');
console.log('   - V√©rifier l\'ouverture de la modal');
console.log('   - Titre: "Import Simple CSV - Questions & R√©ponses"');
console.log('   - T√©l√©charger le template CSV pour voir le format\n');

console.log('4. üìÅ FICHIER DE TEST');
console.log('   - Utiliser le fichier: test-cartes-simple-exemple.csv');
console.log('   - 15 cartes d\'exemple avec Questions/R√©ponses');
console.log('   - Formats support√©s: CSV, XLSX, XLS\n');

console.log('5. üîç ANALYSE ET PREVIEW');
console.log('   - S√©lectionner le fichier CSV');
console.log('   - Cliquer "Analyser le fichier"');
console.log('   - V√©rifier: 15 cartes valides, 0 erreur');
console.log('   - Voir l\'aper√ßu des 5 premi√®res cartes\n');

console.log('6. ‚öôÔ∏è CONFIGURATION');
console.log('   - Choisir "Cr√©er une nouvelle collection"');
console.log('   - Nom: "Test Import Simple CSV"');
console.log('   - Cliquer "Importer 15 cartes"\n');

console.log('7. ‚úÖ V√âRIFICATION R√âSULTATS');
console.log('   - Voir les statistiques: 15 cartes cr√©√©es');
console.log('   - Fermer la modal');
console.log('   - V√©rifier la nouvelle collection dans la liste');
console.log('   - Ouvrir la collection et voir les 15 cartes\n');

// Fonction de test de l'API
const testSimpleImportAPI = async () => {
  console.log('üîó TEST API SIMPLE IMPORT\n');
  
  const token = localStorage.getItem('token');
  if (!token) {
    console.error('‚ùå Pas de token - Veuillez vous connecter d\'abord');
    return;
  }
  
  console.log('‚úÖ Token trouv√©:', token.substring(0, 20) + '...');
  
  // Test de la route preview
  try {
    const testResponse = await fetch('http://localhost:5000/api/simple-bulk-import/preview', {
      method: 'GET',
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    if (testResponse.status === 404) {
      console.log('‚úÖ Route /preview existe (404 normal sans fichier)');
    } else if (testResponse.status === 405) {
      console.log('‚úÖ Route /preview existe (405 = POST requis)');
    } else {
      console.log('üîç Route status:', testResponse.status);
    }
  } catch (error) {
    console.error('‚ùå Erreur test API:', error.message);
  }
};

// Fonction d'aide pour v√©rifier l'utilisateur
const checkUser = () => {
  const user = JSON.parse(localStorage.getItem('user') || '{}');
  console.log('üë§ UTILISATEUR ACTUEL:');
  console.log('   Email:', user.email || 'Non connect√©');
  console.log('   R√¥le:', user.role || 'Non d√©fini');
  console.log('   Nom:', user.name || 'Non d√©fini');
  
  if (user.role === 'teacher') {
    console.log('   ‚úÖ Acc√®s Import Simple CSV: OUI');
  } else {
    console.log('   ‚ùå Acc√®s Import Simple CSV: NON (enseignant requis)');
  }
  
  return user;
};

// Fonction pour v√©rifier les collections
const checkCollections = async () => {
  const token = localStorage.getItem('token');
  if (!token) {
    console.error('‚ùå Token manquant');
    return;
  }
  
  try {
    const response = await fetch('http://localhost:5000/api/collections', {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    
    if (response.ok) {
      const collections = await response.json();
      console.log('üìö COLLECTIONS ACTUELLES:', collections.length);
      collections.forEach((col, index) => {
        console.log(`   ${index + 1}. ${col.name} (${col.cardCount || 0} cartes)`);
      });
    }
  } catch (error) {
    console.error('‚ùå Erreur r√©cup√©ration collections:', error);
  }
};

console.log('üõ†Ô∏è FONCTIONS UTILES DISPONIBLES:');
console.log('   - checkUser() ‚Üí V√©rifier utilisateur connect√©');
console.log('   - testSimpleImportAPI() ‚Üí Test routes API');
console.log('   - checkCollections() ‚Üí Lister collections actuelles');

console.log('\nüéØ CRIT√àRES DE R√âUSSITE:');
console.log('   ‚úÖ Bouton "Import Simple CSV" visible pour enseignant');
console.log('   ‚úÖ Modal s\'ouvre avec les bonnes informations');
console.log('   ‚úÖ Template CSV t√©l√©chargeable');
console.log('   ‚úÖ Analyse du fichier test r√©ussie (15 cartes)');
console.log('   ‚úÖ Import r√©ussi avec nouvelle collection cr√©√©e');
console.log('   ‚úÖ 15 cartes visibles avec m√©tadonn√©es correctes');

console.log('\nüìÑ CONTENU FICHIER TEST:');
console.log('Question,R√©ponse');
console.log('Quelle est la capitale de la France?,Paris');
console.log('Combien font 2+2?,4');
console.log('Qui a √©crit \'Les Mis√©rables\'?,Victor Hugo');
console.log('... et 12 autres cartes');

console.log('\nüöÄ COMMENCER LE TEST:');
console.log('1. Coller ce script dans la console navigateur');  
console.log('2. Ex√©cuter: checkUser()');
console.log('3. Si besoin: Se connecter avec prof.martin@example.com');
console.log('4. Suivre les √©tapes 1-7 ci-dessus');
console.log('5. En cas de probl√®me: testSimpleImportAPI()');

console.log('\n' + '='.repeat(60));
console.log('üéì IMPORT SIMPLE CSV - PR√äT POUR TEST UTILISATEUR');
console.log('='.repeat(60));
