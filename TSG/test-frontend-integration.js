// Test √† ex√©cuter dans la console du navigateur pour valider l'int√©gration frontend
// Ouvrir http://localhost:3000 > F12 > Console > Coller ce code

async function testFrontendIntegration() {
  console.log('üß™ Test d\'int√©gration Frontend-Backend');
  console.log('üìç URL actuelle:', window.location.href);
  
  try {
    // Test 1: V√©rifier que l'API backend est accessible
    console.log('\n1. Test connexion backend...');
    const backendTest = await fetch('http://localhost:5000/api/collections', {
      method: 'GET',
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token') || 'test'}`
      }
    });
    
    console.log('‚úÖ Backend accessible:', backendTest.status);
    
    // Test 2: V√©rifier que les services sont charg√©s
    console.log('\n2. V√©rification des services...');
    if (window.shareCodeService) {
      console.log('‚úÖ shareCodeService disponible');
    } else {
      console.log('‚ùå shareCodeService manquant');
    }
    
    // Test 3: V√©rifier le localStorage pour le token
    console.log('\n3. V√©rification authentification...');
    const token = localStorage.getItem('token');
    const user = localStorage.getItem('user');
    
    if (token && user) {
      console.log('‚úÖ Utilisateur connect√©');
      const userObj = JSON.parse(user);
      console.log(`üë§ Utilisateur: ${userObj.name} (${userObj.role})`);
    } else {
      console.log('‚ùå Utilisateur non connect√©');
      console.log('üí° Connectez-vous d\'abord pour tester les fonctionnalit√©s');
    }
    
    // Test 4: V√©rifier les modals dans le DOM
    console.log('\n4. V√©rification des composants...');
    const shareModal = document.querySelector('[id*="share"]');
    const accessModal = document.querySelector('[id*="access"]');
    
    if (shareModal || accessModal) {
      console.log('‚úÖ Modals pr√©sentes dans le DOM');
    } else {
      console.log('‚ùì Modals non encore mont√©es (normal si pas sur page Collections)');
    }
    
    // Test 5: Test simple d'API (si connect√©)
    if (token) {
      console.log('\n5. Test API de partage...');
      try {
        const testAPI = await fetch('http://localhost:5000/api/share/manage', {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        console.log('‚úÖ API /api/share accessible:', testAPI.status);
      } catch (err) {
        console.log('‚ùå API /api/share inaccessible:', err.message);
      }
    }
    
    console.log('\nüéØ INSTRUCTIONS DE TEST:');
    console.log('1. Allez sur http://localhost:3000');
    console.log('2. Connectez-vous comme enseignant: prof.martin@example.com');
    console.log('3. Allez dans "Mes Collections"');
    console.log('4. Cliquez menu (‚ãÆ) > "Partager par code"');
    console.log('5. Testez la g√©n√©ration de code');
    
  } catch (error) {
    console.error('‚ùå Erreur de test:', error);
  }
}

// Ex√©cuter le test
testFrontendIntegration();
